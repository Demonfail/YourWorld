<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10010</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Size of window
WindowWidth=500;
WindowHeight=500;

WindowWidthMin=440;
WindowWidthMax=min(1024,window_get_width());

WindowHeightMin=200;
WindowHeightMax=min(1024,window_get_height());

//What is drawn top left of window
WindowCaption="ENTITY SELECT";

//Current tab and maximum tab
Tab=0;
TabMax=3;

//The content inside the window
WindowContent=surface_create(2048,2048);
surface_set_target(WindowContent);
draw_clear(c_white);
surface_reset_target();
WindowContentRedraw=true;
WindowContentClicked=1;
WindowContentClickedX=0;
WindowContentClickedY=0;
for(var i=0; i&lt;=TabMax; i+=1)
{
    WindowContentSelectedL[i]=global.LeftMouseTile;
    WindowContentSelectedR[i]=global.RightMouseTile;
}

//Content size and constraints
WindowContentHeight=1024;
WindowContentDrawY=73;
WindowContentY=0;
WindowContentYMin=0;

Holding=0;

device_mouse_raw_xprevious=device_mouse_raw_x(0)
device_mouse_raw_yprevious=device_mouse_raw_y(0)

spriteInd[0]=sTree;
spriteIndMax=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_free(WindowContent)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Control manipulation of the window

//Moving the window
if (Holding==1)
{
    x+=(device_mouse_raw_x(0)-device_mouse_raw_xprevious)
    y+=(device_mouse_raw_y(0)-device_mouse_raw_yprevious)
    
    x=clamp(x,-WindowWidth+10,window_get_width()-10)
    y=clamp(y,35,window_get_height()-10)
    
    device_mouse_raw_xprevious=device_mouse_raw_x(0)
    device_mouse_raw_yprevious=device_mouse_raw_y(0)
}
//Resizing the window
else if (Holding==2)
{
    WindowWidth+=(device_mouse_raw_x(0)-device_mouse_raw_xprevious)
    WindowHeight+=(device_mouse_raw_y(0)-device_mouse_raw_yprevious)
    
    WindowWidth =clamp(WindowWidth ,WindowWidthMin ,WindowWidthMax );
    WindowHeight=clamp(WindowHeight,WindowHeightMin,WindowHeightMax);
    
    WindowContentY=clamp(WindowContentY,0,abs(WindowContentYMin))
    
    device_mouse_raw_xprevious=device_mouse_raw_x(0)
    device_mouse_raw_yprevious=device_mouse_raw_y(0)
    
    WindowContentRedraw=true;
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//If you're dragging something to the Quick Slots, control that
if (Holding==4)
{
    if (mouse_rectangle((window_get_width()/2)-318,window_get_height()-64,(window_get_width()/2)+318,window_get_height()))
    {
        var idon=device_mouse_raw_x(0)-((window_get_width()/2)-318);
        idon/=636;
        idon*=10;
        idon=floor(idon);
        
        if instance_exists(oHUDMain)
        {
            oHUDMain.QuickSlotSelected=idon
        }
        
        SetQuickSlotFromHolding(idon+(keyboard_check(vk_control)*10));
    }
}

Holding=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if mouse_rectangle(x,y,x+WindowWidth,y+70)
{
    Holding=1;
    device_mouse_raw_xprevious=device_mouse_raw_x(0);
    device_mouse_raw_yprevious=device_mouse_raw_y(0);
}

if mouse_rectangle(x+WindowWidth-25,y+WindowHeight-25,x+WindowWidth,y+WindowHeight)
{
    Holding=2;
    device_mouse_raw_xprevious=device_mouse_raw_x(0);
    device_mouse_raw_yprevious=device_mouse_raw_y(0);
}

if mouse_rectangle(x+WindowWidth-25,y+101,x+WindowWidth,y+WindowHeight-56)
{
    Holding=3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
