<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10020</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
surface = surface_create(1024, 1024);
surface_set_target(surface);
draw_clear_alpha(c_teal, 1.0);
surface_reset_target();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (instance_exists(objBody))
&amp;&amp; (global.Mode == MODE_PLAY)
    {
    // Draw the mini-map
    var xPos, yPos, zoom;
    zoom = 6;
    xPos = objBody.x/64;
    yPos = -objBody.y/64;
    if (!surface_exists(surface))
        {
        debug("Recreating mini-map surface...");
        surface = surface_create(1024, 1024);
        surface_set_target(surface);
        draw_clear_alpha(c_teal, 1.0);
        surface_reset_target();
        }
    else
        {
        texture_set_interpolation(false);
        draw_surface_part_ext(surface, xPos-128/zoom, yPos-128/zoom, 256/zoom, 256/zoom, 0, browser_height-256, zoom, zoom, c_white, 0.8);
        texture_set_interpolation(true);
        }
        
    
    // Draw symbols for points of interest
    //................
    
    
    // Draw symbols for mission markers
    with (objMissionControl)
        {
        var currentTraces, index, currentMap, currentTarget, miniX, miniY, dir, dist;
        currentTraces = ds_list_size(markers);
        index = 0;
        repeat (currentTraces)
            {
            // Get the marker values
            currentMap = ds_list_find_value(markers, index++);
            currentTarget = currentMap[? "id"];
            currentText   = currentMap[? "text"];
            currentColor  = currentMap[? "color"];
            
            // Get position and convert it to restricted mini-map position
            miniX = currentTarget.x/64;
            miniY = -currentTarget.y/64;
            dir = point_direction(xPos, yPos, miniX, miniY);
            dist = min(112, point_distance(xPos, yPos, miniX, miniY)*zoom);
            miniX = 0+128+lengthdir_x(dist, dir);
            miniY = browser_height-128+lengthdir_y(dist, dir);
            
            // Draw icon
            if (dist &gt;= 112)
                draw_sprite_ext(sprMiniMissionPointer, 0, miniX, miniY, 1, 1, dir, currentColor, 1.0);
            else
                draw_sprite_ext(sprMiniMissionTarget, 0, miniX, miniY, 1, 1, 0, currentColor, 1.0);
                
            // Draw text
            draw_set_halign(fa_left);
            draw_set_valign(fa_bottom);
            draw_set_font(fTwCenConM);
            draw_set_alpha(1.0);
            DrawTextOutline(miniX+5, miniY-6, currentText, currentColor);
            }
        }
    
    
    // Draw the player's LOS as a cone
    draw_sprite_ext(sprLosCone, 0, 0+128, browser_height-128, 1, 1, -90-objBody.image_angle, c_lime, 1.0);
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
