<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialise the engine

{
    // HTML5?
    global.HTML5=false;
    global.LoadSave=true;
    global.CityShader=RenderPlusSelection;
    global.SpriteShader=SpriteSelectionShader;
    if( os_browser != browser_not_a_browser || os_type == os_android || os_type==os_macosx || os_type==os_linux)
    {
        global.HTML5=true;
        //global.LoadSave=false;
        global.CityShader=RenderCity;
        global.SpriteShader=SimpleSpriteShader;
    }

    // Global variables
    global.drawDebug = false;
    global.renderRoadFlags = true;
    global.enableTrafficSpawn = false;
    global.snapToGrid = true;
    global.decalsVisible = true;
    
    // Create the Sprite Vertex Format
    vertex_format_begin();
    vertex_format_add_position_3d();
    vertex_format_add_colour();
    vertex_format_add_textcoord();
    global.SpriteFormat = vertex_format_end();
    
    
    // Create the Vertex Format we'll use
    vertex_format_begin();
    vertex_format_add_position_3d();
    vertex_format_add_normal();
    vertex_format_add_colour();
    vertex_format_add_textcoord();
    global.CityFormat = vertex_format_end();
    
    // Create the Selection Vertex Format
    vertex_format_begin();
    vertex_format_add_position_3d();
    vertex_format_add_colour();
    global.SelectionFormat = vertex_format_end();
        
    
    
    // Create the Vertex Format we'll use
    global.TempSpriteBuffer = vertex_create_buffer_ext(4*1024);
    
    global.cubes=0;
    global.polys=0;
    global.cube=-1;
            
    // Room change on the 4th frame
    alarm[0]=15;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Start the game!
    
// Initialise 3D
d3d_start();
d3d_set_perspective(true);
d3d_set_hidden(true);
d3d_set_culling(true);        
d3d_set_projection_perspective(0,0, room_width, room_height, 90);  
    

    
// And start the game....
room_goto_next();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(arial)
draw_set_halign(fa_center)
draw_set_valign(fa_center)
draw_clear_alpha($202020,1);
draw_outline(1280/2,720/2,"Loading, please wait.............",c_white);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
